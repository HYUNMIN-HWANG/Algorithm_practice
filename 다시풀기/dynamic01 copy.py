# 1로 만들기 2 https://www.acmicpc.net/problem/12852
'''
문제
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.

정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 
연산을 사용하는 횟수의 최솟값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 자연수 N이 주어진다.
2

10
출력
첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.

둘째 줄에는 N을 1로 만드는 방법에 포함되어 있는 수를 공백으로 구분해서 순서대로 출력한다. 
정답이 여러 가지인 경우에는 아무거나 출력한다.

1
2 1

3
10 9 3 1

'''
"""
# 내 풀이 : 최솟값까지는 나왔는데 경로를 못 풀었다.
# n = int(input())
n = 10

d = []
for t in range(2) :
    d.append([0] * (n+1))
print(d[0])

for i in range(2, n+1) :
    print("i : ", i)
    d[0][i] = d[0][i-1] + 1
    d[1][i] = d[1][i-1] + i

    if i % 3 == 0 :
        d[0][i] = min(d[0][i], d[0][i//3]+1)
        d[1][i] = d[1][i//3] + i

    if i % 2 == 0 : 
        d[0][i] = min(d[0][i], d[0][i//2]+1)
        d[1][i] = d[1][i//2] + i

    print(d)
    print("=========")

print(d[0][n])
"""

# 기본 판이 되는 d를 잘 만들어야 했다.
# d[i][0] : 최솟값을 저장하는 곳
# d[i][1] : 경로를 저장하는 곳 

# n = int(input())
n = 10

d = [[0,[]] for _ in range (n+1)]
d[1][0] = 0
d[1][1] = [1]
# print(d)
# print(d[1][0])
# print(d[1][1])

for i in range(2, n+1) :
    # print("i : ", i)
    d[i][0] = d[i-1][0] + 1
    d[i][1] = d[i-1][1] + [i]

    if i % 3 == 0 and d[i][0] > d[i//3][0] + 1 :
        d[i][0] = d[i//3][0] + 1
        d[i][1] = d[i//3][1] + [i]

    if i % 2 == 0 and d[i][0] > d[i//2][0] + 1 :
        d[i][0]=  d[i//2][0] + 1
        d[i][1] = d[i//2][1] + [i]

    # print(d)
    # print("=========")

print(d[n][0])
for i in d[n][1][::-1] :
    print(i, end=' ')
# n = int(input())
