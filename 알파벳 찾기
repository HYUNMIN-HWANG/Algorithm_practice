문제 : 
알파벳 소문자로만 이루어진 단어 S가 주어진다. 
각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

입력 : 첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
출력 : 
각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.

# 제출한 답안
s = str(input())
print(s.find('a'),s.find('b'),s.find('c'),s.find('d'),s.find('e'),s.find('f'),\
    s.find('g'),s.find('h'),s.find('i'),s.find('j'),s.find('k'),s.find('l'),\
        s.find('m'),s.find('n'),s.find('o'),s.find('p'),s.find('q'),s.find('r'),\
            s.find('s'),s.find('t'),s.find('u'),s.find('v'),s.find('w'),\
                s.find('x'),s.find('y'),s.find('z'))

# 좀 더 간단한 방법
s = str(input())
alphabet = list(range(97,123)) # 알파벳의 아스키코드 주소

for x in alphabet :
    print(s.find(chr(x)))       # 알파벳 아스키코드를 알파벳으로 변환 -> find() 함수 : 문자역에서 가장 처음 나온 위치를 반환한다. 없으면 -1 반환함
